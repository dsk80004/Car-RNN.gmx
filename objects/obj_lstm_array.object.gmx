<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the neural net
   lstm_array_create(2, 2, 2);

//Initialize weights
   randomize()
   lstm_array_initialize();
   
   
//Fitness (are you into fitness?)
   fitness = 0;
   point_in_time = 0;
   agent_score = 0;
   alarm[0] = 5;
   active = true
   hascheckpoint = ds_list_create()
///weights and bias
//bias = 0;
//output_bias = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active
{
  // create the psudo arrays
  a1[0,0] = 0
  a1[0,1] = 1
  a1[1,0] = 2
  a1[1,1] = 3
  
  a2[0,0] = 8
  a2[0,1] = 6
  a2[1,0] = 5
  a2[1,1] = 2
  
  //Give input
     ds_list_add(inputs, array_add(normalize(a1, 0, 4), -1))
     ds_list_add(inputs, array_add(normalize(a2, 0, 4), -1))
     //we normalize this way so we get a value -1 to 1 giving a larger range of numbers for the NN to handle
     show_debug_message("ds_list_find_value(inputs, 0) = "+string(ds_list_find_value(inputs, 0)))
     show_debug_message("ds_list_find_value(inputs, 1) = "+string(ds_list_find_value(inputs, 1)))
     
     
  //Feed forward
     lstm_array_feedforward();
      
     show_debug_message("############################################################")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///de-normalize, then print

repeat(5){
b1 = array_multiply_real(array_add(outputs[| 0], 1), 4);
b2 = array_multiply_real(array_add(outputs[| 1], 1), 4);

show_debug_message("outputs[| 0] = "+string(outputs[| 0]))
show_debug_message("outputs[| 1] = "+string(outputs[| 1]))

show_debug_message("b1 = "+string(b1))
show_debug_message("b2 = "+string(b2))
show_debug_message("#######################################################")
//Feed forward
     lstm_array_feedforward();
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
